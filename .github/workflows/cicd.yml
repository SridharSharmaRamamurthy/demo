name: Build Maven App & Push to DTR

on: [push]
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests=true

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        run: echo "${{ secrets.DTR_TOKEN }}" | docker login -u "${{ secrets.DTR_USERNAME }}" --password-stdin

      - name: Build and push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DTR_URL }}/spring-app:latest
            ${{ secrets.DTR_URL }}/spring-app:${{ github.sha }}

      - name: Set image tag output
        run: echo "IMAGE=${{ secrets.DTR_USERNAME }}/spring-app:${{ github.sha }}" >> $GITHUB_OUTPUT
        
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy image to local or test cluster
        run: |
          IMAGE=${{ secrets.DTR_USERNAME }}/spring-app:${{ github.sha }}
          # Replace with your kubectl apply or helm upgrade
          kubectl set image deployment/springboot-demo springboot-demo=$IMAGE
          kubectl rollout status deployment/springboot-demo --timeout=120s

  dast-scan:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Wait for application to become live
        run: |
          until curl -s http://localhost:8080/actuator/health | grep '"status":"UP"' ; do
            echo "Waiting for appâ€¦"
            sleep 5
          done

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:8080'
          fail_action: true
          artifact_name: 'zap-report'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: ./zap_report.html
